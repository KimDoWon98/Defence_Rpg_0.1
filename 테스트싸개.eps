function Skill_01_Q(cp) // 괴물사냥꾼
{
    if(hrs.hero_life[cp] == 1 && hrs.hero_id[cp] == 1 )
    {
    if (Click_Q[cp] == 1) {
        // 마나 감소 및 상태 설정
        @SetResource(cp, Subtract, Mana_Q[cp], Gas);
        Click_Q[cp] = 0;
        stec_Q[cp] = 1;
        stec_All[cp] = 1;
        Cooltime_Q[cp] = maxCooltime_Q[cp];
        
        // 위치 설정
        MoveLocation(hrs.hero_loc[cp], hrs.hero_player[cp], cp, "Anywhere");
        MoveLocation(skill_loc_01[cp], hrs.hero_player[cp], cp, "Anywhere");
        
        // 각도 및 범위 계산
        getangle_01(cp, hrs.hero_loc[cp], mouse_loc[cp]);
        var range = (6 * 32 + hrs.hero_range[cp]) / 32;
        var_Q_01[cp] = 1;
        var_Q_02[cp] = range;
        var_Q_04[cp] = getangle_00(hrs.hero_loc[cp], mouse_loc[cp]);
        
        // 유닛 방향 및 속도 설정
  //      MoveUnit(1, hrs.hero_player[cp], cp,  "Anywhere", hrs.hero_loc[cp]);
  //      SetMemoryXEPD(hrs.hero_epd[cp] + 0x20/4, SetTo, 4, 4);  // 공중유닛 특성 
  //      SetMemoryXEPD(hrs.hero_epd[cp]  + 0x20/4, SetTo, var_Q_04[cp] << 8, 0xFF00); // 각도 조절 
        
   //     @SetCUnitepd(hrs.hero_epd[cp], "currentDirection1", var_Q_04[cp], SetTo);
  //      @SetCUnitepd(hrs.hero_epd[cp], "velocityDirection1", var_Q_04[cp], SetTo);
        
        // 효과 이미지 및 소리
   //     ef.image_door(529, 89);
 //       @SetNextUnitEpd(var_Q_03[cp]);
  //      CreateUnit(1, ef.door, hrs.hero_loc[cp], cp);
  //      @SetImagesDat("Iscript_ID", 529, 240, SetTo);
  //      @SetCUnitepd(ef.door, "statusFlags", 0xA00000, Add);
        PlayWAV("sound/bullet/psibolt.wav");
        
        // 폴라 위치 및 이미지 스캔
        sys.PolarLocation(hrs.hero_loc[cp], 10, angle_01[cp]);
        ef.image_scan(440, hrs.hero_loc[cp], cp);
    }
    
    if (var_Q_01[cp] == 1) {
        if (var_Q_02[cp] > 0) {
            // 스킬 범위 이동 및 유닛 설정
            sys.PolarLocation(skill_loc_01[cp], 32, angle_01[cp]);
            ef.image_scan(332, skill_loc_01[cp], cp);
      //      @SetCUnitepd(var_Q_03[cp], "unitType", 47, SetTo);
        //    MoveUnit(1, 47, cp, "Anywhere", skill_loc_01[cp]);
        //    @SetCUnitepd(var_Q_03[cp], "unitType", 80, SetTo);
            
            // 유닛 방향 및 속도 설정
    //        var a = var_Q_04[cp];
    //        @SetCUnitepd(var_Q_03[cp], "currentDirection1", a, SetTo);
   //         @SetCUnitepd(var_Q_03[cp], "velocityDirection1", a, SetTo);            
            var_Q_02[cp]--;
            
            // 적군 존재 여부 확인
            if (Bring(Force2, AtLeast, 1, "(men)", skill_loc_01[cp])) {
                var_Q_02[cp] = 0;
            }
        }
        
        // 스킬 종료 처리
        if (var_Q_02[cp] == 0) {
        //    @SetCUnitepd(var_Q_03[cp], "unitType", 80, SetTo);
         //   RemoveUnit(ef.door, cp);
            var_Q_01[cp] = 0;
            
            // 적군이 있으면 공격 수행
            if (Bring(Force2, AtLeast, 1, "(men)", skill_loc_01[cp])) {
                MoveLocation(skill_loc_01[cp], "(men)", Force2, skill_loc_01[cp]);
                t.AttackGround(skill_loc_01[cp], skill_loc_01[cp], Q_Unit[cp], 96, cp);
                if(hrs.hero_range[cp]/32 >= 10) // 사거리 보너스 데미지
                {
                     t.AttackGround(skill_loc_01[cp], skill_loc_01[cp], Q_Unit[cp], 96, cp);
                     ef.image_scan(58, skill_loc_01[cp], cp);         
                     ef.image_scan(333, skill_loc_01[cp], cp);         
                          
                }
                else
                {
                    ef.image_scan(59, skill_loc_01[cp], cp);
                    ef.image_scan(333, skill_loc_01[cp], cp);         
                }
            }
        }
    }
    }
}